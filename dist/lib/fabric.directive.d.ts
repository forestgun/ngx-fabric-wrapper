import { OnInit, OnDestroy, DoCheck, OnChanges, EventEmitter, NgZone, ElementRef, KeyValueDiffers, SimpleChanges } from '@angular/core';
import { FabricConfigInterface } from './fabric.interfaces';
export declare class FabricDirective implements OnInit, OnDestroy, DoCheck, OnChanges {
    private zone;
    private elementRef;
    private differs;
    private defaults;
    private instance;
    private ro;
    private objectsJSON;
    private initialZoom;
    private initialWidth;
    private initialHeight;
    private configDiff;
    zoom: number;
    width: number;
    height: number;
    disabled: boolean;
    config?: FabricConfigInterface;
    drop: EventEmitter<any>;
    dragover: EventEmitter<any>;
    dragenter: EventEmitter<any>;
    dragleave: EventEmitter<any>;
    mouseup: EventEmitter<any>;
    mousedown: EventEmitter<any>;
    mouseover: EventEmitter<any>;
    mouseout: EventEmitter<any>;
    mousemove: EventEmitter<any>;
    mousewheel: EventEmitter<any>;
    mousedblclick: EventEmitter<any>;
    mouseupBefore: EventEmitter<any>;
    mousedownBefore: EventEmitter<any>;
    mousemoveBefore: EventEmitter<any>;
    mouseUp: EventEmitter<any>;
    mouseDown: EventEmitter<any>;
    mouseOver: EventEmitter<any>;
    mouseOut: EventEmitter<any>;
    mouseMove: EventEmitter<any>;
    mouseDblclick: EventEmitter<any>;
    mouseUpBefore: EventEmitter<any>;
    mouseDownBefore: EventEmitter<any>;
    mouseMoveBefore: EventEmitter<any>;
    pathCreated: EventEmitter<any>;
    alterRender: EventEmitter<any>;
    objectAdded: EventEmitter<any>;
    objectMoved: EventEmitter<any>;
    objectScaled: EventEmitter<any>;
    objectSkewed: EventEmitter<any>;
    objectRotated: EventEmitter<any>;
    objectRemoved: EventEmitter<any>;
    objectModified: EventEmitter<any>;
    objectSelected: EventEmitter<any>;
    objectMoving: EventEmitter<any>;
    objectScaling: EventEmitter<any>;
    objectSkewing: EventEmitter<any>;
    objectRotating: EventEmitter<any>;
    selectionCleared: EventEmitter<any>;
    selectionCreated: EventEmitter<any>;
    selectionUpdated: EventEmitter<any>;
    beforeTransform: EventEmitter<any>;
    beforeSelectionCleared: EventEmitter<any>;
    constructor(zone: NgZone, elementRef: ElementRef, differs: KeyValueDiffers, defaults: FabricConfigInterface);
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    fabric(): any;
    clear(): void;
    render(): void;
    setZoom(zoom: number): void;
    setWidth(width: number): void;
    setHeight(height: number): void;
    loadFromJSON(json: any, callback?: Function, reviverOpt?: any): void;
}
